FROM balenalib/amd64-alpine-python:3.9.0



# Packages
# –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– #

# Install Supervisor
RUN pip install supervisor==4.2.1 --no-deps --no-cache-dir

# Install dependencies
RUN install_packages findmnt util-linux grep

# Install NGINX and PHP-FPM
RUN install_packages php7 php7-fpm php7-opcache php7-mysqli php7-json \
    php7-openssl php7-curl php7-zlib php7-xml php7-phar php7-intl php7-dom \ 
    php7-xmlreader php7-ctype php7-session php7-mbstring php7-gd nginx curl && \
    rm /etc/nginx/conf.d/default.conf

# Install Node.js and npm
# Note: only required in the dev environment to work on the interface
# RUN install_packages nodejs-npm=12.18.4-r0
# RUN apk add --update nodejs
RUN apk add nodejs-current npm
RUN node -v && npm -v

# Install IFM Filemanager dependencies
RUN install_packages libbz2 libzip libcap openldap-dev php7-zip php7-ldap \ 
    php7-bz2 php7-fileinfo php7-posix



# Directories
# –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– #

# Set application directory
WORKDIR /app/web/

# Create root directories
RUN mkdir -p ./public/interface && \
    mkdir -p ./public/files && \ 
    mkdir -p ./public/storage && \ 
    mkdir -p ./public/storage/website && \
    mkdir -p ./public/storage/fileshare



# Service configurations
# –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– #

# Copy Supervisor config to container
COPY config/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Copy USB config to container and execute
#ENV UDEV=on
COPY config/usb/udev/usb.rules /etc/udev/rules.d/usb.rules
COPY config/usb/scripts /usr/src/scripts
RUN chmod +x /usr/src/scripts/*

# Copy PHP-FPM & NGINX configs to container
COPY config/php/fpm-pool.conf /etc/php7/php-fpm.d/www.conf
COPY config/php/php.ini /etc/php7/conf.d/custom.ini
COPY config/nginx/ /etc/nginx/



# Frontend interface app configuration
# –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– #

# Frontend 
# Set node env
ENV NODE_ENV=development

# Instal Vue-CLI for dev
RUN npm install -g @vue/cli @vue/cli-service-global

# Temporarily change workdir to interface app
# WORKDIR /public/frontend

# Create node modules folder
RUN mkdir -p ./public/interface/node_modules

# Copy frontend interface source code to container
# This is needed as the npm dev build requires a bunch of files such as the 
# package-lock.json but also the vue config, etc.
COPY ./apps/interface/ ./public/interface/

# Install app dependencies
RUN cd ./public/interface && npm install



# INSERT FILE-MANAGER
#COPY --from=php-buildstep --chown=nginx build-context/dist/ifm.php /app/web/public/files/index.php

# INSERT NGINX WEB CONTENT
#COPY --from=node-buildstep --chown=nginx build-context/public/ /app/web/public/frontend



# Permissions
# –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– #
RUN chown -R nginx.nginx /run && \
    chown -R nginx.nginx /app/web/public/interface && \
    chown -R nobody.nobody /app/web/public/storage/website/ && \
    chown -R nobody.nobody /app/web/public/storage/fileshare/



# Launch
# –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– #

# Export ports
EXPOSE 8081 3000

# Start services
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]



# Healthcheck
# –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––– #
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8081/fpm-ping
