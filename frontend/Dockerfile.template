## Build library
FROM node:14.17.0-alpine3.13 AS library-buildstep

# Add enviroment variable for OnDevice build
ENV ONDEVICE=TRUE

# Set work directory
WORKDIR /build-context

# Install node modules with long network timeout to resolve slow disk I/O on local builds
COPY apps/library/package.json .
COPY apps/library/yarn.lock .

RUN yarn install --network-timeout 600000 --frozen-lockfile

COPY apps/library/ .

RUN yarn run lint

RUN yarn build


## Build interface
FROM node:14.17.0-alpine3.13 AS interface-buildstep

WORKDIR /build-context

# Install node modules with long network timeout to resolve slow disk I/O on local builds
COPY apps/interface/package.json .
COPY apps/interface/yarn.lock .

RUN yarn install --network-timeout 600000 --frozen-lockfile

COPY apps/interface/ .

RUN yarn run lint

RUN yarn build


## Build File Manager
FROM composer:2.0.11 AS filemanager-buildstep

# Provide TERM for TPUT
ENV TERM=xterm

# Install required build dependencies
RUN apk add ncurses

# Set workdir to the build folder
WORKDIR /build-context

# Copy content to prepare
COPY apps/file-manager/ .

# Run the build process
RUN composer run build


## Compile container
FROM balenalib/%%BALENA_ARCH%%-alpine-python:3.8.10-3.13-20210603

# Install packages #

# Add mount dependencies
RUN install_packages \
  findmnt \
  grep \
  util-linux

# Install SupervisorD
RUN pip install supervisor==4.2.2 --no-deps --no-cache-dir

# Install Nginx and PHP-FPM
RUN install_packages \
  curl \
  nginx \
  php8 \
  php8-ctype \
  php8-curl \
  php8-dom \
  php8-fpm \
  php8-gd \
  php8-intl \
  php8-json \
  php8-mbstring \
  php8-mysqli \
  php8-opcache \
  php8-openssl \
  php8-phar \
  php8-session \
  php8-xml \
  php8-xmlreader \
  php8-zlib \
  && rm /etc/nginx/conf.d/default.conf

# Install File Manager dependencies
RUN install_packages \
  libbz2 \
  libzip \
  libcap \
  openldap-dev \
  php8-bz2 \
  php8-fileinfo \
  php8-ldap \
  php8-posix \
  php8-zip

# Set application directory 
WORKDIR /app/

# Create root directories #
RUN mkdir -p public/files && \
  mkdir -p public/storage && \
  mkdir -p public/storage/fileshare && \
  mkdir -p public/storage/library && \ 
  mkdir -p public/storage/website && \
  mkdir -p public/interface/lb_share/assets
    
# Configure SupervisorD
COPY config/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Enable USB support on device
ENV UDEV=on
COPY config/usb/udev/usb.rules /etc/udev/rules.d/usb.rules
COPY config/usb/scripts /usr/src/scripts
RUN chmod +x /usr/src/scripts/*

#Â Configure PHP-FPM and NGINX
COPY config/php/fpm-pool.conf /etc/php8/php-fpm.d/www.conf
COPY config/php/php.ini /etc/php8/conf.d/custom.ini
COPY /config/nginx/nginx.conf /etc/nginx/nginx.conf
COPY /config/nginx/conf/ /etc/nginx/conf.d/

# Insert website holding page
COPY --chown=nginx /config/nginx/assets/index.html public/storage/website/index.html
COPY --chown=nginx /config/nginx/assets/web.png public/storage/website/web.png

# Insert File Manager source code
COPY --chown=nginx --from=filemanager-buildstep /build-context/dist public/files

# Insert interface source code
COPY --chown=nginx --from=interface-buildstep /build-context/dist/spa public/interface

# Insert Library source code
COPY --chown=nginx --from=library-buildstep /build-context/dist/spa public/library

# Set file permissions 
RUN chown -R nginx.nginx /run && \
  chown -R nobody.nobody public/storage/fileshare/ && \
  chown -R nobody.nobody public/storage/library/ && \
  chown -R nobody.nobody public/storage/website/ && \
  chown -R nobody.nobody public/interface/lb_share/

# Start SupervisorD to manage processes
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

HEALTHCHECK --timeout=10s \
  CMD curl --silent --fail http://127.0.0.1:8081/fpm-ping || exit 1
