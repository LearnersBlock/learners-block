FROM amd64/composer AS php-buildstep

#Install required build dependencies
RUN apk add ncurses

# Copy content to prepare
COPY apps/file-manager/ /build-context

# Set workdir to the build folder
WORKDIR /build-context

# Run the build process
RUN composer run build

FROM balenalib/amd64-alpine-node:14.15.4-build AS node-buildstep

# Set node env
RUN npm config set unsafe-perm true

# Copy frontend interface source code to container
COPY ./apps/interface/ /build-context
WORKDIR /build-context

# Install app dependencies and run static production build
RUN npm install
RUN npm run build
RUN npm run lint

FROM balenalib/%%BALENA_MACHINE_NAME%%-alpine-python:3.8.6

## Install packages

# Supervisor
RUN pip install supervisor==4.2.1 --no-deps --no-cache-dir

# Mount dependencies
RUN install_packages findmnt util-linux grep

# Nginx and PhP-FPM
RUN install_packages php7 php7-fpm php7-opcache php7-mysqli php7-json \
    php7-openssl php7-curl php7-zlib php7-xml php7-phar php7-intl php7-dom \
    php7-xmlreader php7-ctype php7-session php7-mbstring php7-gd nginx curl && \
    rm /etc/nginx/conf.d/default.conf

# FILE-MANAGER DEPENDENCIES
RUN install_packages libbz2 libzip libcap openldap-dev php7-zip php7-ldap php7-bz2 \
    php7-fileinfo php7-posix

## Create root directories

RUN mkdir -p /app/web/public/frontend && \
    mkdir -p /app/web/public/files && \ 
    mkdir -p /app/web/public/storage && \ 
    mkdir -p /app/web/public/storage/website && \
    mkdir -p /app/web/public/storage/fileshare

# SET APPLICATION DIRECTORY
WORKDIR /app/web/

## CONFIGURE CONTROLLER

# SUPERVISORD
COPY config/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# USB
ENV UDEV=on
COPY config/usb/udev/usb.rules /etc/udev/rules.d/usb.rules
COPY config/usb/scripts /usr/src/scripts
RUN chmod +x /usr/src/scripts/*

## CONFIGURE PHP-FPM & NGINX

COPY config/php/fpm-pool.conf /etc/php7/php-fpm.d/www.conf
COPY config/php/php.ini /etc/php7/conf.d/custom.ini
COPY config/nginx/production/ /etc/nginx/

# INSERT FILE-MANAGER

COPY --from=php-buildstep --chown=nginx /build-context/dist /app/web/public/files

# INSERT NODE WEB CONTENT

COPY --from=node-buildstep --chown=nginx /build-context/dist /app/web/public/interface

# SET PERMISSIONS
RUN chown -R nginx.nginx /run && \
    chown -R nginx.nginx /app/web/public/frontend && \
    chown -R nobody.nobody /app/web/public/storage/website/ && \
    chown -R nobody.nobody /app/web/public/storage/fileshare/

## WRAP-UP
EXPOSE 8081

CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8081/fpm-ping
