name: "Deploy Development Release"
on:
 pull_request:
    types: [opened, synchronize, closed]
    branches:
      - main
jobs:
  deploy-release:
    name: "Deploy Development Release"
    runs-on: "ubuntu-latest"
    if: github.head_ref != 'l10n_master'
    steps:
      - uses: actions/checkout@v2

      - name: Update versions
        run: |
          echo VERSION="dev" > ${GITHUB_WORKSPACE}/backend/apps/controller/.version

      - name: Remove 'version' line from balena.yml in development environment
        run: sed -i '/version/,+1 d' ${GITHUB_WORKSPACE}/balena.yml

      - name: Deploy aarch64 to development
        uses: balena-io/balena-ci@master
        id: build-dev-aarch64
        with:
          balena_token: ${{ secrets.BALENA_API_TOKEN }}
          fleet: learner_s_block/lb-dev-aarch64

      - name: Deploy armv7hf to development
        uses: balena-io/balena-ci@master
        id: build-dev-armv7hf
        with:
          balena_token: ${{ secrets.BALENA_API_TOKEN }}
          fleet: learner_s_block/lb-dev-armv7hf

  build-images:
    name: "Build development images"
    runs-on: "ubuntu-latest"
    needs: [deploy-release]
    if: github.event.pull_request.merged == true

    steps:
      - uses: actions/checkout@v2

      - name: Create image builder context
        env:
          BALENA_CLI: https://github.com/balena-io/balena-cli/releases/download/v12.55.0/balena-cli-v12.55.0-linux-x64-standalone.zip
        run: |
          sudo apt-get update && sudo apt-get install -y \
              curl \
              jq \
              unzip \
              wget \
              zip
          cd /opt/ && \
            sudo curl -O -sSL $BALENA_CLI && \
            sudo unzip balena-cli-*-linux-x64-standalone.zip && \
            sudo ln -s /opt/balena-cli/balena /usr/bin/ && \
            cd $GITHUB_WORKSPACE

      - name: Set version to dev
        run: |
          echo "RELEASE_VERSION=dev" >> $GITHUB_ENV

      - name: Create images
        env:
          BALENA_API_TOKEN: ${{ secrets.BALENA_API_TOKEN }}
        run: |
          bash $GITHUB_WORKSPACE/.github/workflows/image-builder/run.sh development

      - name: Create development changeLog and publish pre-release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "development"
          prerelease: true
          title: "Development Build"
          files: |
            Learners-Block-*.zip
