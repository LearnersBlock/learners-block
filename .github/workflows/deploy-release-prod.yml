name: "Deploy Production Release"

on:
  push:
    tags:
      - '*'
jobs:
  deploy-release:
    name: "Deploy Production Release"
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2

      - name: Update versions
        run: |
          echo VERSION="$RELEASE_VERSION" > ${GITHUB_WORKSPACE}/backend/apps/controller/.version && \
          sed -i "/^\([[:space:]]*version: \).*/s//\1$RELEASE_VERSION/" ${GITHUB_WORKSPACE}/balena.yml

      - name: Commit .version file
        uses: EndBug/add-and-commit@v7.2.1
        with:
          author_name: Learner's Block
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'Update version files'
          branch: main
          add: './backend/apps/controller/.version'

      - name: Deploy aarch64 to production
        uses: balena-io/deploy-to-balena-action@master
        id: build-prod-aarch64
        with:
          balena_token: ${{ secrets.BALENA_API_TOKEN }}
          fleet: learner_s_block/LearnersBlock

      - name: Deploy armv7hf to production
        uses: balena-io/deploy-to-balena-action@master
        id: build-prod-armv7hf
        with:
          balena_token: ${{ secrets.BALENA_API_TOKEN }}
          fleet: learner_s_block/lb-armv7hf

  build-images:
    name: "Build production images"
    runs-on: "ubuntu-latest"
    needs: [deploy-release]

    steps:
      - uses: actions/checkout@v2

      - name: Create image builder context
        env:
          BALENA_CLI: https://github.com/balena-io/balena-cli/releases/download/v13.0.2/balena-cli-v13.0.2-linux-x64-standalone.zip
        run: |
          sudo apt-get update && sudo apt-get install -y \
              curl \
              jq \
              unzip \
              wget \
              zip
          cd /opt/ && \
            sudo curl -O -sSL $BALENA_CLI && \
            sudo unzip balena-cli-*-linux-x64-standalone.zip && \
            sudo ln -s /opt/balena-cli/balena /usr/bin/ && \
            cd $GITHUB_WORKSPACE

      - name: Set version variable
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Create images
        env:
          BALENA_API_TOKEN: ${{ secrets.BALENA_API_TOKEN }}
        run: |
          bash $GITHUB_WORKSPACE/.github/workflows/image-builder/run.sh production

      - name: Create production changeLog and publish releases
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            Learners-Block-*.zip
