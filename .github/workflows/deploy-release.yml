name: "Deploy Release"

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "develop"
      - "!l10n_master"
jobs:
  deploy-release:
    name: "Deploy Release"
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: '0'

      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Update .version file
        run: echo VERSION="$RELEASE_VERSION" > ${GITHUB_WORKSPACE}/controller/apps/backend/.version

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Commit .version file
        uses: EndBug/add-and-commit@v7
        with:
          author_name: Learner's Block
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'Update version files'
          branch: master
          add: './controller/apps/backend/.version'

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Checkout production Library from 'main' branch
        run: |
          cd ./frontend/apps/library && \
            git checkout -f main && \
            cd $GITHUB_WORKSPACE

      - name: Build Quasar and WiFi-Connect
        run: |
          docker-compose -f docker-compose.build.yml up --build

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Create ZIP Package for Releases
        run: |
          tar -cz --exclude-vcs --exclude-vcs-ignores -f ../Learners-Block-Dist-$RELEASE_VERSION.tar.gz -C $GITHUB_WORKSPACE .
          mv ../Learners-Block-Dist-$RELEASE_VERSION.tar.gz $GITHUB_WORKSPACE

      - name: Create build context
        env:
          BALENA_CLI: https://github.com/balena-io/balena-cli/releases/download/v12.43.2/balena-cli-v12.43.2-linux-x64-standalone.zip
        run: |
          sudo apt-get update && sudo apt-get install -y \
              curl \
              unzip \
              zip \
              jq \
              wget
          cd /opt/ && \
            sudo curl -O -sSL $BALENA_CLI && \
            sudo unzip balena-cli-*-linux-x64-standalone.zip && \
            sudo ln -s /opt/balena-cli/balena /usr/bin/ && \
            cd $GITHUB_WORKSPACE
          git clone https://github.com/LearnersBlock/balena-image-builder.git $GITHUB_WORKSPACE/balena-image-builder/

      - if: github.ref == 'refs/heads/develop'
        name: Create and deploy develop code to Open Balena
        env:
          BALENA_API_TOKEN: ${{ secrets.BALENA_API_TOKEN }}
          OPEN_BALENA_ADDRESS: ${{ secrets.OPEN_BALENA_ADDRESS }}
          OPEN_BALENA_ROOT_CERT: ${{ secrets.OPEN_BALENA_ROOT_CERT }}
        run: |
          bash $GITHUB_WORKSPACE/balena-image-builder/entrypoint.sh development

      - if: startsWith(github.ref, 'refs/heads/develop')
        name: Create development changeLog and publish pre-release
        uses: "marvinpinto/action-automatic-releases@v1.1.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "development"
          prerelease: true
          title: "Development Build"
          files: |
            Learners-Block-*.zip

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Create and deploy production code to Open Balena
        env:
          BALENA_API_TOKEN: ${{ secrets.BALENA_API_TOKEN }}
          OPEN_BALENA_ADDRESS: ${{ secrets.OPEN_BALENA_ADDRESS }}
          OPEN_BALENA_ROOT_CERT: ${{ secrets.OPEN_BALENA_ROOT_CERT }}
        run: |
          bash $GITHUB_WORKSPACE/balena-image-builder/entrypoint.sh production

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Create production changeLog and publish releases
        uses: "marvinpinto/action-automatic-releases@v1.1.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            Learners-Block-Dist-*.tar.gz
            Learners-Block-*.zip
